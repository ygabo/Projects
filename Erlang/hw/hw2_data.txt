Yelnil Gabo
70179064
g3d6

1 a ) no data
  b ) no data
  c ) This is the raw data I got, running tail recursion and head recursion after.

	13> hw2:get_trt().
	[{10, [{mean,6.799252082277736e-6},{std,2.6470614358788667e-4}]},
	 {100, [{mean,6.960100075400039e-5},{std,0.0010182020122275653}]},
	 {1000, [{mean,6.634823066841504e-4},{std,0.0031434822563126724}]},
	 {10000, [{mean,0.00658341558441559},{std,0.007734085283507428}]},
	 {100000, [{mean,0.06531150000000001},{std,0.006311035308621483}]},
	 {1000000, [{mean,0.6939989999999999},{std,0.011313708498985511}]},
	 {10000000,[{mean,8.221999},{std,undefined}]}]
	14> hw2:get_hrt().
	[{10, [{mean,6.828920250596987e-6},{std,2.653956686035359e-4}]},
	 {100, [{mean,6.537623251918019e-5},{std,9.855422939402966e-4}]},
	 {1000, [{mean,6.696349206349284e-4},{std,0.0031574353110605225}]},
	 {10000, [{mean,0.0068656666666666736},{std,0.007994954021606777}]},
	 {100000, [{mean,0.07464185714285716},{std,0.010888293946020373}]},
	 {1000000,[{mean,0.771999},{std,0.03252691193458124}]},
	 {10000000,[{mean,13.587999},{std,undefined}]}]

	 
2 a)	With the following list sizes:
		[0,500,1000,1500,2000,2500,3000,3500,4000,4500,5000,5500,
		6000,6500,7000,7500,8000,8500,9000,9500,10000];
		
		These are the time for each of them, respectively:
		hw2:multiple_time_send(10000).
		[3.026010790272635e-6,3.448427968089987e-5,
		 9.176463873986887e-5,1.8328587647593376e-4,
		 1.728108513832281e-4,1.4203350970017943e-4,
		 1.4845611775529343e-4,1.7340860215053959e-4,
		 1.9617868414663968e-4,2.1287503295544654e-4,
		 2.1631513052744003e-4,2.810563870518626e-4,
		 2.738900949796497e-4,3.146634279051714e-4,
		 3.864634146341514e-4,3.6203715308863276e-4,
		 3.510112945265016e-4,3.8849207873260073e-4,
		 4.933337400854212e-4,6.103766037735885e-4,
		 6.079009009009025e-4]

  b)  First version:      
        time_send(N) -> time_it:t( fun() -> tsend(N) end ).
        tsend(N) ->
          OtherPid = spawn( hw2, child1proc, [N]), 
          spawn( hw2, child2proc, [N, OtherPid] ),
          ok.

        child1proc(N) -> ok.          
        child2proc(N, OtherPid) -> ok.        
        As you can see, it does nothing but spawn and finish.
        It ran at a time of: 
        23> hw2:time_send(1).
        [{mean,3.6762066020970506e-6},{std,1.6371125842881828e-4}]
        24> hw2:time_send(1).
        [{mean,3.815871761464055e-6},{std,1.6834963605271054e-4}]
        25> hw2:time_send(1).
        [{mean,3.7448313017803677e-6},{std,1.6504318251412745e-4}]     
        
      Second version:        
        time_send(N) -> time_it:t( fun() -> tsend(N) end ).
        tsend(N) ->
          OtherPid = spawn( hw2, child1proc, [N]), 
          spawn( hw2, child2proc, [N, OtherPid] ),
          ok.

        child1proc(N) -> 
          receive 
            {child2, OtherPid} ->
              OtherPid ! child1
          end.
          
        child2proc(N, OtherPid) -> 
          OtherPid ! {child2,self()},
          receive 
            child1 -> ok
          end.
          
        28> hw2:time_send(1).
        [{mean,4.939125280919699e-6},{std,2.1066033078454057e-4}]
        29> hw2:time_send(1).
        [{mean,4.932697257788737e-6},{std,2.1105709028312552e-4}]
        30> hw2:time_send(1).
        [{mean,4.763711860157259e-6},{std,2.052917426321167e-4}]
  c )	t1 = ( y2 - y1 ) / ( x2 - x1 )
      t1 = ( 1.8328587647593376e-4 - 3.448427968089987e-5 ) / ( 1500 - 500 )
      t1 = 1.48801597e-7
      
      u1 = ( y2 - y1 ) / ( x2 - x1 )
      u1 = ( 1.9617868414663968e-4 - 1.4845611775529343e-4 ) / ( 4000 - 3000 )
      u1 = 4.77225664e-8
      
3 a ) code
  b )   
    56> time_it:t(fun() -> hw2:par_primes(1000, 500000,64) end ). 
    [{mean,1.0919999999999999},{std,undefined}]
    57> time_it:t(fun() -> hw2:par_primes(1000, 500000,64) end ).
    [{mean,1.0919999999999999},{std,undefined}]
    
    time_it:t(fun() -> hw2:primes(1000, 500000) end ).        
    [{mean,0.6939994999999999},{std,0.011313001392211568}]
    59> time_it:t(fun() -> hw2:primes(1000, 500000) end ).
    [{mean,0.6864994999999999},{std,7.078138879500988e-4}]
  c )  
     83> lists:zip([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,25,75,125,175,200,256],hw2:time_parallel_sieve([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,25,75,125,175,200,256])). 
    [{1,[{mean,0.10537412499999999},{std,0.007347324594464993}]},
     {2,[{mean,0.06476823076923079},{std,0.0086424711565794}]},
     {3,[{mean,0.05262400000000001},{std,0.008180260794538591}]},
     {4,[{mean,0.04864605882352942},{std,0.00523140966268392}]},
     {5,[{mean,0.05406566666666668},{std,0.008110545751116308}]},
     {6,[{mean,0.055132333333333346},{std,0.008025554423809169}]},
     {7,[{mean,0.05406566666666668},{std,0.008110545751116338}]},
     {8,[{mean,0.06021328571428573},{std,0.005618356883104971}]},
     {9,[{mean,0.062383615384615405},{std,5.063696835397149e-4}]},
     {10,[{mean,0.06361438461538463},{std,0.004350066312491744}]},
     {11,[{mean,0.06476823076923079},{std,0.005890017630899434}]},
     {12,[{mean,0.070249},{std,0.008103029736406605}]},
     {13,[{mean,0.07274900000000001},{std,0.007759158811014534}]},
     {14,[{mean,0.07283233333333335},{std,0.007637626158259477}]},
     {15,[{mean,0.07654445454545455},{std,0.00482418151324408}]},
     {16,[{mean,0.081099},{std,0.006539622822966506}]},
     {25,[{mean,0.105374},{std,0.0070292755164181485}]},
     {75,[{mean,0.24174899999999996},{std,0.015500000000000812}]},
     {125,[{mean,0.389999},{std,0.016000000000000195}]},
     {175,[{mean,0.545999},{std,0.022627416997971023}]},
     {200,[{mean,0.639499},{std,0.02192031021678032}]},
     {256,[{mean,0.772499},{std,0.010606601717785854}]}]



